{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","components/GifGridItem.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevState","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","className","GifGridItem","src","alt","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA0BeA,EAvBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAC7CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAcdM,GAdc,4CAAH,sDCoBLO,EAhBE,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAAe,ECDP,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACC,GACtBH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAGZ,CAAChB,IAEGiB,EDb2BK,CAAatB,GAAjCa,EADmB,EACzBN,KAAcS,EADW,EACXA,QAEtB,OACE,qCACE,oBAAIO,UAAU,oCAAd,SAAmDvB,IAClDgB,GAAW,mBAAGO,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SACGV,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEFjBa,EATK,SAAC,GAAoB,IAAlBZ,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,sBAAKqB,UAAU,yCAAf,UACE,qBAAKE,IAAKvB,EAAKwB,IAAKd,IACpB,4BAAIA,QCgBKe,EAnBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,gBADrB,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,qCACE,8CACA,uBACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG2C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCVzB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.a14cf24e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((prevState) => [inputValue, ...prevState]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nexport default AddCategory;\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=JuJlGFXfh769mgYSm9o1kT6e9wa1ojXC`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from '.';\n\nconst GiftGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n      {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\n      <div className='card-grid'>\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GiftGrid;\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React, { useState } from 'react';\nimport { AddCategory, GiftGrid } from './components';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Dragon Ball']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <br />\n      <AddCategory setCategories={setCategories} />\n      <br/>\n      <ol>\n        {categories.map((category) => (\n          <GiftGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './assets/styles/index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}